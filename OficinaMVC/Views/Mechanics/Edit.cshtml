@model OficinaMVC.Models.Mechanics.MechanicEditViewModel
@{
    ViewData["Title"] = "Edit Staff Settings";
    var daysOfWeek = Enum.GetNames(typeof(DayOfWeek));
}

<div class="row justify-content-center">
    <div class="col-lg-8 col-xl-7">

        <div class="text-center mt-4 mb-3">
            <h2 class="mb-0 text-primary">
                <i class="bi bi-person-gear me-2"></i>@ViewData["Title"]
            </h2>
            <p class="text-muted">Manage settings for @Model.FullName</p>
        </div>

        <div class="card shadow mb-4 border-0">
            <div class="card-body d-flex align-items-center">
                <img src="@(!string.IsNullOrEmpty(Model.ProfileImageUrl) ? Model.ProfileImageUrl : "/images/default-profile.png")"
                     alt="Profile" class="rounded-circle border me-3 shadow-sm"
                     style="width:60px; height:60px; object-fit:cover;">
                <div>
                    <h5 class="mb-0">@Model.FullName</h5>
                    <div class="text-muted small">ID: <span class="fw-medium">@Model.UserId</span></div>
                </div>
            </div>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success d-flex align-items-center mb-3">
                <i class="bi bi-check-circle-fill fs-4 me-2"></i>
                <div>@TempData["SuccessMessage"]</div>
            </div>
        }

        <div class="card shadow border-0 mb-4">
            <div class="card-header bg-light">
                <h5 class="mb-0">Specialties & Schedule</h5>
            </div>
            <div class="card-body p-4">
                <form asp-action="Edit" method="post" autocomplete="off">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="FullName" />
                    <input type="hidden" asp-for="ProfileImageUrl" />

                    <!-- Specialties -->
                    <div class="mb-4">
                        <label class="form-label fw-bold">
                            <i class="bi bi-tools text-primary me-1"></i> Specialties
                        </label>
                        <div class="row">
                            @foreach (var specialty in Model.AvailableSpecialties)
                            {
                                <div class="col-12 col-md-6">
                                    <div class="form-check form-check-inline mb-2">
                                        <input type="checkbox"
                                               class="form-check-input"
                                               id="spec_@specialty.Id"
                                               name="SelectedSpecialtyIds"
                                               value="@specialty.Id"
                                               @(Model.SelectedSpecialtyIds.Contains(specialty.Id) ? "checked" : "") />
                                        <label class="form-check-label" for="spec_@specialty.Id">
                                            @specialty.Name
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Schedule -->
                    <div class="mb-4">
                        <label class="form-label fw-bold">
                            <i class="bi bi-calendar-week text-primary me-1"></i> Weekly Schedule
                        </label>
                        <div class="table-responsive">
                            <table class="table table-bordered align-middle mb-0" id="scheduleTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Day</th>
                                        <th>Start Time</th>
                                        <th>End Time</th>
                                        <th class="text-center">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.Schedules != null && Model.Schedules.Any())
                                    {
                                        for (int i = 0; i < Model.Schedules.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    <select name="Schedules[@i].DayOfWeek" class="form-select" required>
                                                        @foreach (var day in daysOfWeek)
                                                        {
                                                            <option value="@day" selected="@(Model.Schedules[i].DayOfWeek.ToString() == day)">@day</option>
                                                        }
                                                    </select>
                                                    <input type="hidden" name="Schedules[@i].Id" value="@Model.Schedules[i].Id" />
                                                </td>
                                                <td><input type="time" name="Schedules[@i].StartTime" class="form-control" required value="@Model.Schedules[i].StartTime.ToString(@"hh\:mm")" /></td>
                                                <td><input type="time" name="Schedules[@i].EndTime" class="form-control" required value="@Model.Schedules[i].EndTime.ToString(@"hh\:mm")" /></td>
                                                <td class="text-center">
                                                    <button type="button" class="btn btn-sm btn-outline-danger p-1 remove-row" title="Remove">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="mt-2">
                            <button type="button" id="addRowBtn" class="btn btn-sm btn-outline-success">
                                <i class="bi bi-plus-circle"></i> Add Slot
                            </button>
                        </div>
                        <small class="text-muted">Set one or more available working periods.</small>
                    </div>

                    <div class="d-flex justify-content-end mt-4">
                        <a asp-action="Index" class="btn btn-secondary btn-lg me-2">
                            <i class="bi bi-arrow-left"></i> Back to list
                        </a>
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="bi bi-check-circle"></i> Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let scheduleIndex = @(Model.Schedules?.Count ?? 0);
            const daysOfWeek = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(daysOfWeek));
            const tableBody = document.getElementById('scheduleTable').getElementsByTagName('tbody')[0];

            function addRow() {
                const newRow = tableBody.insertRow();
                newRow.innerHTML = `
                    <td>
                        <select name="Schedules[${scheduleIndex}].DayOfWeek" class="form-select" required>
                            ${daysOfWeek.map(day => `<option value="${day}">${day}</option>`).join('')}
                        </select>
                        <input type="hidden" name="Schedules[${scheduleIndex}].Id" value="0" />
                    </td>
                    <td><input type="time" name="Schedules[${scheduleIndex}].StartTime" class="form-control" required /></td>
                    <td><input type="time" name="Schedules[${scheduleIndex}].EndTime" class="form-control" required /></td>
                    <td class="text-center">
                        <button type="button" class="btn btn-sm btn-outline-danger p-1 remove-row" title="Remove">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>`;
                scheduleIndex++;
            }

            document.getElementById('addRowBtn').addEventListener('click', addRow);

            tableBody.addEventListener('click', function(e) {
                if (e.target && e.target.closest('.remove-row')) {
                    e.target.closest('tr').remove();
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}