@model OficinaMVC.Data.Entities.Repair
@inject OficinaMVC.Data.Repositories.IPartRepository PartRepository
@{
    ViewData["Title"] = "Manage Repair";
    var partsList = new SelectList(await PartRepository.GetAllAsync(), "Id", "Name");
}

<div class="row justify-content-center">
    <div class="col-lg-10">
        <!-- Main Form for Notes -->
        <form asp-action="UpdateDetails" asp-route-id="@Model.Id" method="post" class="card shadow-lg border-0 mt-4">
            <div class="card-header bg-warning text-dark py-3">
                <h2 class="mb-0 text-center"><i class="bi bi-pencil-square me-2"></i>@ViewData["Title"] #@Model.Id</h2>
            </div>
            <div class="card-body p-4 p-md-5">
                <fieldset class="mb-4">
                    <legend class="fs-5 border-bottom pb-2 mb-3">Vehicle & Client Information</legend>
                    <dl class="row">
                        <dt class="col-sm-3">Vehicle</dt>
                        <dd class="col-sm-9">@Model.Vehicle.CarModel.Brand.Name @Model.Vehicle.CarModel.Name</dd>
                        <dt class="col-sm-3">License Plate</dt>
                        <dd class="col-sm-9">@Model.Vehicle.LicensePlate</dd>
                        <dt class="col-sm-3">Owner</dt>
                        <dd class="col-sm-9">@Model.Vehicle.Owner.FullName</dd>
                    </dl>
                </fieldset>
                <fieldset>
                    <legend class="fs-5 border-bottom pb-2 mb-3">Repair Notes</legend>
                    <div class="mb-3">
                        <p class="fs-5"><strong>Status:</strong> <span class="badge bg-warning text-dark">@Model.Status</span></p>
                        <input type="hidden" name="status" value="@Model.Status" />
                        <label for="description" class="form-label fw-bold">Description / Mechanic Notes</label>
                        <textarea name="description" class="form-control" rows="4">@Model.Description</textarea>
                    </div>
                </fieldset>
                <div class="text-end">
                    <button type="submit" class="btn btn-primary"><i class="bi bi-save me-1"></i> Save Notes</button>
                </div>
            </div>
        </form>

        <!-- Parts Management Card - Now directly in this view -->
        <div class="card shadow-sm border-0 mt-4">
            <div class="card-header"><h4 class="mb-0">Parts Used (Total: @Model.TotalCost.ToString("C"))</h4></div>
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                }
                <table class="table">
                    <thead><tr><th>Part</th><th>Quantity</th><th>Unit Price</th><th>Subtotal</th><th></th></tr></thead>
                    <tbody>
                        @if (!Model.RepairParts.Any())
                        {
                            <tr><td colspan="5" class="text-center text-muted">No parts have been added.</td></tr>
                        }
                        @foreach (var item in Model.RepairParts)
                        {
                            <tr>
                                <td>@item.Part.Name</td>
                                <td>@item.Quantity</td>
                                <td>@item.UnitPrice.ToString("C")</td>
                                <td>@((item.Quantity * item.UnitPrice).ToString("C"))</td>
                                <td class="text-end">
                                    <form asp-action="RemovePart" method="post" class="d-inline">
                                        <input type="hidden" name="repairPartId" value="@item.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm" title="Remove Part"><i class="bi bi-x-lg"></i></button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="card-footer">
                <form asp-action="AddPart" method="post" class="row g-3 align-items-end" id="add-part-form">
                    <input type="hidden" name="repairId" value="@Model.Id" />
                    <div class="col-md-5">
                        <label for="partIdSelect" class="form-label">Add Part</label>
                        <select name="partId" id="partIdSelect" class="form-select" asp-items="partsList"><option value="">Select a part...</option></select>
                    </div>
                    <div class="col-md-2">
                        <label for="quantityInput" class="form-label">Quantity</label>
                        <input type="number" name="quantity" id="quantityInput" value="1" class="form-control" min="1" />
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">In Stock</label>
                        <p id="stock-display" class="form-control-plaintext fw-bold fs-5 ps-2">-</p>
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-success w-100"><i class="bi bi-plus-circle me-1"></i> Add to Repair</button>
                    </div>
                    <div class="col-12">
                        <div id="part-validation-message" class="text-danger mt-2 fw-bold"></div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Complete Repair Button -->
        <div class="text-center mt-4">
            <button type="button" class="btn btn-success btn-lg px-5 shadow" data-bs-toggle="modal" data-bs-target="#completeRepairModal">
                <i class="bi bi-check2-circle me-1"></i> Complete This Repair
            </button>
        </div>
    </div>
</div>

<div class="modal fade" id="completeRepairModal" tabindex="-1" aria-labelledby="completeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="completeModalLabel">Confirm Completion</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to mark this repair as completed? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <!-- THE FIX: The form now correctly wraps the buttons and has the right action -->
                <form asp-action="Complete" asp-route-id="@Model.Id" method="post">
                    @Html.AntiForgeryToken()
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Yes, Complete Repair</button>
                </form> <!-- THE FIX: The closing tag was missing -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // --- Real-time Stock Checker Script ---
            const partSelect = $('#partIdSelect');
            const quantityInput = $('#quantityInput');
            const stockDisplay = $('#stock-display');
            const validationMessage = $('#part-validation-message');
            const addPartForm = $('#add-part-form');
            let currentStock = 0;

            function updateStockInfo() {
                const partId = partSelect.val();
                stockDisplay.text('-');
                validationMessage.text('');
                currentStock = 0;

                if (partId) {
                    $.getJSON(`/Parts/GetPartDetails?id=${partId}`, function(data) {
                        if (data && !data.error) {
                            stockDisplay.text(data.stockQuantity);
                            currentStock = data.stockQuantity;
                        }
                    });
                }
            }

            // Listen for changes on the dropdown
            partSelect.on('change', updateStockInfo);

            // Listen for submission of the Add Part form
            addPartForm.on('submit', function(e) {
                const requestedQuantity = parseInt(quantityInput.val(), 10);

                if (requestedQuantity > currentStock) {
                    e.preventDefault(); // This STOPS the form from submitting
                    validationMessage.text(`Error: Not enough stock. Only ${currentStock} available.`);
                } else {
                     validationMessage.text('');
                }
            });

            // Initial check
            updateStockInfo();
        });
    </script>
}